{"ast":null,"code":"import React from'react';import{Container,Form,FormControl,Col}from'react-bootstrap';import moment from'moment';function RentalForm(props){var agesOptions=[];/* Array of object (key, value) used to populate the select for the age of the driver */for(var i=18;i<=75;i++){if(i<25)agesOptions.push({key:i,value:i+\" (+\".concat(props.prices.driverAge[0]*100,\"%)\")});else if(i>65)agesOptions.push({key:i,value:i+\" (+\".concat(props.prices.driverAge[1]*100,\"%)\")});else agesOptions.push({key:i,value:i});}var driversOptions=[];/* Array used to populate the select for the age of the driver */for(var _i=0;_i<=10;_i++){driversOptions.push(_i);}return/*#__PURE__*/React.createElement(Container,{className:\"d-flex flex-column mt-2 mt-md-5\"},/*#__PURE__*/React.createElement(\"div\",{className:\"display-4 mb-2 mb-md-5\"},\"New rental\"),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"From\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"date\",name:\"startDate\",value:props.rental.startDate,min:props.rental.startDate/* ERROR: must be tomorrow */,onChange:function onChange(e){props.updateField(e.target.name,e.target.value);},required:true}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Label,null,\"To\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"date\",name:\"endDate\",value:props.rental.endDate,min:moment(props.rental.startDate).add(1,'d').format('YYYY-MM-DD')/* min is the day after start rental */,onChange:function onChange(e){props.updateField(e.target.name,e.target.value);},required:true}))),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"car\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Car category\"),/*#__PURE__*/React.createElement(Form.Control,{name:\"category\",as:\"select\",value:props.rental.category,onChange:function onChange(e){props.updateField(e.target.name,e.target.value);},required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Choose a category\"),/*#__PURE__*/React.createElement(\"option\",null,\"A\"),/*#__PURE__*/React.createElement(\"option\",null,\"B\"),/*#__PURE__*/React.createElement(\"option\",null,\"C\"),/*#__PURE__*/React.createElement(\"option\",null,\"D\"),/*#__PURE__*/React.createElement(\"option\",null,\"E\")),/*#__PURE__*/React.createElement(FormControl.Feedback,{type:\"invalid\"},\"Please, choose a category\")),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"driverAge\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Driver age\"),/*#__PURE__*/React.createElement(Form.Control,{name:\"driverAge\",as:\"select\",value:props.rental.driverAge.toString(),onChange:function onChange(e){props.updateField(e.target.name,e.target.value);},required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\",key:\"0\"},\"Select age of the driver\"),agesOptions.map(function(option){return/*#__PURE__*/React.createElement(\"option\",{key:option.key,value:option.key},option.value);})),/*#__PURE__*/React.createElement(FormControl.Feedback,{type:\"invalid\"},\"Please, select the age of the driver\")),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"extraDrivers\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Extra drivers  (+\",props.prices?props.prices.extraDriver*100:'',\"% per-driver)\"),/*#__PURE__*/React.createElement(Form.Control,{name:\"extraDrivers\",as:\"select\",value:props.rental.extraDrivers.toString(),onChange:function onChange(e){props.updateField(e.target.name,e.target.value);},required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\",key:\"0\"},\"Number of extra drivers\"),driversOptions.map(function(option){return/*#__PURE__*/React.createElement(\"option\",{key:option},option);}))),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"km\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Estimated kilometers per day\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",name:\"km\",value:props.rental.km,onChange:function onChange(e){props.updateField(e.target.name,e.target.value);},required:true},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Estimated kilometers per day\"),/*#__PURE__*/React.createElement(\"option\",{value:\"0\"},\"Less than 50 km per day (\",props.prices.km[0]*100,\"%)\"),/*#__PURE__*/React.createElement(\"option\",{value:\"1\"},\"Between 50 km and 150 km per day\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2\"},\"More than 150 km per day (+\",props.prices.km[1]*100,\"%)\"))),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Check,{name:\"insurance\",type:\"checkbox\",label:'Add insurance (+'+props.prices.insurance*100+'%)',checked:props.rental.insurance,onChange:function onChange(e){props.updateField(e.target.name,e.target.checked);}})));}export default RentalForm;","map":{"version":3,"sources":["/Users/davidefalcone/Universita/Polito/Web Applications I/exam1-car-rental-davidefalcone1 copia/client/src/components/RentalForm.js"],"names":["React","Container","Form","FormControl","Col","moment","RentalForm","props","agesOptions","i","push","key","value","prices","driverAge","driversOptions","rental","startDate","e","updateField","target","name","endDate","add","format","category","toString","map","option","extraDriver","extraDrivers","km","insurance","checked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Container, Form, FormControl, Col} from 'react-bootstrap';\nimport moment from 'moment';\nfunction RentalForm (props){\n  let agesOptions = []; /* Array of object (key, value) used to populate the select for the age of the driver */\n  for (let i = 18; i <= 75; i++){\n    if(i<25)\n      agesOptions.push({key: i, value: i + ` (+${props.prices.driverAge[0] * 100}%)`});\n    else if (i>65)\n      agesOptions.push({key: i, value: i + ` (+${props.prices.driverAge[1] * 100}%)`});\n    else\n      agesOptions.push({key: i, value: i});\n  }\n  let driversOptions = []; /* Array used to populate the select for the age of the driver */\n  for (let i = 0; i <= 10; i++)\n    driversOptions.push(i);\n  return (\n    <Container className = 'd-flex flex-column mt-2 mt-md-5'>\n      <div className = 'display-4 mb-2 mb-md-5'>New rental</div>\n      <Form.Row>\n        <Col>\n          <Form.Group>\n            <Form.Label>From</Form.Label>\n            <Form.Control type = 'date' name = 'startDate' value = {props.rental.startDate} min = {props.rental.startDate /* ERROR: must be tomorrow */} onChange = {(e) => {props.updateField(e.target.name, e.target.value)}} required/>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Label>To</Form.Label>\n          <Form.Control type = 'date' name = 'endDate' value = {props.rental.endDate} min = {moment(props.rental.startDate).add(1, 'd').format('YYYY-MM-DD') /* min is the day after start rental */} onChange = {(e) => {props.updateField(e.target.name, e.target.value)}} required/>\n        </Col>\n      </Form.Row>\n      <Form.Group controlId=\"car\">\n        <Form.Label>Car category</Form.Label>\n        <Form.Control name = 'category' as=\"select\" value = {props.rental.category} onChange = {(e) => {props.updateField(e.target.name, e.target.value)}} required>\n          <option value = ''>Choose a category</option>\n          <option>A</option>\n          <option>B</option>\n          <option>C</option>\n          <option>D</option>\n          <option>E</option>\n        </Form.Control>\n        <FormControl.Feedback type = 'invalid'>Please, choose a category</FormControl.Feedback>\n      </Form.Group>\n      <Form.Group controlId = 'driverAge'>\n        <Form.Label>Driver age</Form.Label>\n        <Form.Control name = 'driverAge' as = 'select' value = {props.rental.driverAge.toString()} onChange = {(e) => {props.updateField(e.target.name, e.target.value)}} required>\n          <option value = '' key = '0'>Select age of the driver</option>\n          {\n            agesOptions.map((option) => <option key = {option.key} value = {option.key}>{option.value}</option>)\n          }\n        </Form.Control>\n        <FormControl.Feedback type = 'invalid'>Please, select the age of the driver</FormControl.Feedback>\n      </Form.Group>\n      <Form.Group controlId = 'extraDrivers'>\n        <Form.Label>Extra drivers  (+{props.prices ? (props.prices.extraDriver * 100) : ''}% per-driver)</Form.Label>\n        <Form.Control name = 'extraDrivers' as = 'select' value = {props.rental.extraDrivers.toString()} onChange = {(e) => {props.updateField(e.target.name, e.target.value)}} required>\n          <option value = '' key = '0'>Number of extra drivers</option>\n          {\n            driversOptions.map((option) => <option key = {option}>{option}</option>)\n          }\n        </Form.Control>\n      </Form.Group>\n      <Form.Group controlId=\"km\">\n        <Form.Label>Estimated kilometers per day</Form.Label>\n        <Form.Control as = 'select' name = 'km' value = {props.rental.km} onChange = {(e) => {props.updateField(e.target.name, e.target.value)}} required>\n          <option value = ''>Estimated kilometers per day</option>\n          <option value = '0'>Less than 50 km per day ({props.prices.km[0] * 100}%)</option>\n          <option value = '1'>Between 50 km and 150 km per day</option>\n          <option value = '2'>More than 150 km per day (+{props.prices.km[1] * 100}%)</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group>\n        <Form.Check name = 'insurance' type = 'checkbox' label = {'Add insurance (+' + props.prices.insurance * 100 + '%)'} checked = {props.rental.insurance} onChange = {(e) => {props.updateField(e.target.name, e.target.checked)}}/>\n      </Form.Group>\n    </Container>\n  );\n}\nexport default RentalForm;\n"]},"metadata":{},"sourceType":"module"}