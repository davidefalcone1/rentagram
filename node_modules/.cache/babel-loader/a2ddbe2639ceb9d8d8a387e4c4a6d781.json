{"ast":null,"code":"import moment from'moment';export var categoriesColors=[{name:'A',color:'danger'/* Color of the badge */},{name:'B',color:'secondary'/* Color of the badge */},{name:'C',color:'primary'/* Color of the badge */},{name:'D',color:'dark'/* Color of the badge */},{name:'E',color:'info'/* Color of the badge */}];export function getBrands(cars){var brands=[];cars.forEach(function(car){if(!brands.includes(car.brand))brands.push(car.brand);});brands.sort();return brands;}export function getCarsByFilters(cars,category,brand){var filterCars=cars;if(category)filterCars=getCarsByCategory(filterCars,category);if(brand)filterCars=getCarsByBrand(filterCars,brand);return filterCars;}function getCarsByCategory(cars,category){return cars.filter(function(c){return c.category===category;});/* category.includes(c.category) */}function getCarsByBrand(cars,brand){return cars.filter(function(c){return c.brand===brand;});}export function getPastRentals(rentals){var pastRentals=[];rentals.forEach(function(rental){if(rental.endDate.isBefore(moment()))pastRentals.push(rental);});return pastRentals;}export function getFutureRentals(rentals){var pastRentals=getPastRentals(rentals);return rentals.filter(function(rental){return!pastRentals.includes(rental);});}","map":{"version":3,"sources":["/Users/davidefalcone/Universita/Polito/Web Applications I/exam1-car-rental-davidefalcone1 copia/client/src/helper.js"],"names":["moment","categoriesColors","name","color","getBrands","cars","brands","forEach","car","includes","brand","push","sort","getCarsByFilters","category","filterCars","getCarsByCategory","getCarsByBrand","filter","c","getPastRentals","rentals","pastRentals","rental","endDate","isBefore","getFutureRentals"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAO,IAAIC,CAAAA,gBAAgB,CAAG,CAC5B,CAACC,IAAI,CAAC,GAAN,CAAWC,KAAK,CAAE,QAAS,wBAA3B,CAD4B,CAE5B,CAACD,IAAI,CAAC,GAAN,CAAWC,KAAK,CAAE,WAAY,wBAA9B,CAF4B,CAG5B,CAACD,IAAI,CAAC,GAAN,CAAWC,KAAK,CAAE,SAAU,wBAA5B,CAH4B,CAI5B,CAACD,IAAI,CAAC,GAAN,CAAWC,KAAK,CAAE,MAAO,wBAAzB,CAJ4B,CAK5B,CAACD,IAAI,CAAC,GAAN,CAAWC,KAAK,CAAE,MAAO,wBAAzB,CAL4B,CAAvB,CAOP,MAAO,SAASC,CAAAA,SAAT,CAAmBC,IAAnB,CAAwB,CAC7B,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACAD,IAAI,CAACE,OAAL,CAAa,SAACC,GAAD,CAAS,CACpB,GAAG,CAACF,MAAM,CAACG,QAAP,CAAgBD,GAAG,CAACE,KAApB,CAAJ,CACEJ,MAAM,CAACK,IAAP,CAAYH,GAAG,CAACE,KAAhB,EACH,CAHD,EAIAJ,MAAM,CAACM,IAAP,GACA,MAAON,CAAAA,MAAP,CACD,CACD,MAAO,SAASO,CAAAA,gBAAT,CAA0BR,IAA1B,CAAgCS,QAAhC,CAA0CJ,KAA1C,CAAiD,CACtD,GAAIK,CAAAA,UAAU,CAAGV,IAAjB,CACA,GAAGS,QAAH,CACEC,UAAU,CAAGC,iBAAiB,CAACD,UAAD,CAAaD,QAAb,CAA9B,CACF,GAAGJ,KAAH,CACEK,UAAU,CAAGE,cAAc,CAACF,UAAD,CAAaL,KAAb,CAA3B,CACF,MAAOK,CAAAA,UAAP,CACD,CACD,QAASC,CAAAA,iBAAT,CAA2BX,IAA3B,CAAiCS,QAAjC,CAA0C,CACxC,MAAOT,CAAAA,IAAI,CAACa,MAAL,CAAY,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACL,QAAF,GAAeA,QAAnB,EAAb,CAAP,CAAkD,mCACnD,CACD,QAASG,CAAAA,cAAT,CAAwBZ,IAAxB,CAA8BK,KAA9B,CAAoC,CAClC,MAAOL,CAAAA,IAAI,CAACa,MAAL,CAAY,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACT,KAAF,GAAYA,KAAhB,EAAb,CAAP,CACD,CACD,MAAO,SAASU,CAAAA,cAAT,CAAwBC,OAAxB,CAAgC,CACrC,GAAMC,CAAAA,WAAW,CAAG,EAApB,CACAD,OAAO,CAACd,OAAR,CAAgB,SAACgB,MAAD,CAAY,CAC1B,GAAGA,MAAM,CAACC,OAAP,CAAeC,QAAf,CAAwBzB,MAAM,EAA9B,CAAH,CACEsB,WAAW,CAACX,IAAZ,CAAiBY,MAAjB,EACH,CAHD,EAIA,MAAOD,CAAAA,WAAP,CACD,CACD,MAAO,SAASI,CAAAA,gBAAT,CAA0BL,OAA1B,CAAkC,CACvC,GAAMC,CAAAA,WAAW,CAAGF,cAAc,CAACC,OAAD,CAAlC,CACA,MAAOA,CAAAA,OAAO,CAACH,MAAR,CAAe,SAAAK,MAAM,QAAI,CAACD,WAAW,CAACb,QAAZ,CAAqBc,MAArB,CAAL,EAArB,CAAP,CACD","sourcesContent":["import moment from 'moment';\nexport let categoriesColors = [\n  {name:'A', color: 'danger' /* Color of the badge */},\n  {name:'B', color: 'secondary' /* Color of the badge */},\n  {name:'C', color: 'primary' /* Color of the badge */},\n  {name:'D', color: 'dark' /* Color of the badge */},\n  {name:'E', color: 'info' /* Color of the badge */},\n];\nexport function getBrands(cars){\n  const brands = [];\n  cars.forEach((car) => {\n    if(!brands.includes(car.brand))\n      brands.push(car.brand);\n  });\n  brands.sort();\n  return brands;\n}\nexport function getCarsByFilters(cars, category, brand) {\n  let filterCars = cars;\n  if(category)\n    filterCars = getCarsByCategory(filterCars, category);\n  if(brand)\n    filterCars = getCarsByBrand(filterCars, brand);\n  return filterCars;\n}\nfunction getCarsByCategory(cars, category){\n  return cars.filter(c => c.category === category); /* category.includes(c.category) */\n}\nfunction getCarsByBrand(cars, brand){\n  return cars.filter(c => c.brand === brand);\n}\nexport function getPastRentals(rentals){\n  const pastRentals = [];\n  rentals.forEach((rental) => {\n    if(rental.endDate.isBefore(moment()))\n      pastRentals.push(rental);\n  });\n  return pastRentals;\n}\nexport function getFutureRentals(rentals){\n  const pastRentals = getPastRentals(rentals);\n  return rentals.filter(rental => !pastRentals.includes(rental));\n}\n"]},"metadata":{},"sourceType":"module"}